// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package eea

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// EeaRoleManagerABI is the input ABI used to generate the binding from.
const EeaRoleManagerABI = "[{\"constant\":true,\"inputs\":[{\"name\":\"_roleId\",\"type\":\"string\"},{\"name\":\"_orgId\",\"type\":\"string\"}],\"name\":\"getRoleDetails\",\"outputs\":[{\"name\":\"roleId\",\"type\":\"string\"},{\"name\":\"orgId\",\"type\":\"string\"},{\"name\":\"accessType\",\"type\":\"uint256\"},{\"name\":\"voter\",\"type\":\"bool\"},{\"name\":\"admin\",\"type\":\"bool\"},{\"name\":\"active\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_roleId\",\"type\":\"string\"},{\"name\":\"_orgId\",\"type\":\"string\"},{\"name\":\"_baseAccess\",\"type\":\"uint256\"},{\"name\":\"_isVoter\",\"type\":\"bool\"},{\"name\":\"_isAdmin\",\"type\":\"bool\"}],\"name\":\"addRole\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNumberOfRoles\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_rIndex\",\"type\":\"uint256\"}],\"name\":\"getRoleDetailsFromIndex\",\"outputs\":[{\"name\":\"roleId\",\"type\":\"string\"},{\"name\":\"orgId\",\"type\":\"string\"},{\"name\":\"accessType\",\"type\":\"uint256\"},{\"name\":\"voter\",\"type\":\"bool\"},{\"name\":\"admin\",\"type\":\"bool\"},{\"name\":\"active\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_roleId\",\"type\":\"string\"},{\"name\":\"_orgId\",\"type\":\"string\"}],\"name\":\"removeRole\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_roleId\",\"type\":\"string\"},{\"name\":\"_orgId\",\"type\":\"string\"},{\"name\":\"_ultParent\",\"type\":\"string\"}],\"name\":\"roleExists\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_roleId\",\"type\":\"string\"},{\"name\":\"_orgId\",\"type\":\"string\"},{\"name\":\"_ultParent\",\"type\":\"string\"}],\"name\":\"isAdminRole\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_roleId\",\"type\":\"string\"},{\"name\":\"_orgId\",\"type\":\"string\"},{\"name\":\"_ultParent\",\"type\":\"string\"}],\"name\":\"roleAccess\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_roleId\",\"type\":\"string\"},{\"name\":\"_orgId\",\"type\":\"string\"},{\"name\":\"_ultParent\",\"type\":\"string\"}],\"name\":\"isVoterRole\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_permUpgradable\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_roleId\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_orgId\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_baseAccess\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_isVoter\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"_isAdmin\",\"type\":\"bool\"}],\"name\":\"RoleCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_roleId\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_orgId\",\"type\":\"string\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"}]"

// EeaRoleManagerBin is the compiled bytecode used for deploying new contracts.
var EeaRoleManagerBin = ""

// DeployEeaRoleManager deploys a new Ethereum contract, binding an instance of EeaRoleManager to it.
func DeployEeaRoleManager(auth *bind.TransactOpts, backend bind.ContractBackend, _permUpgradable common.Address) (common.Address, *types.Transaction, *EeaRoleManager, error) {
	parsed, err := abi.JSON(strings.NewReader(EeaRoleManagerABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(EeaRoleManagerBin), backend, _permUpgradable)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &EeaRoleManager{EeaRoleManagerCaller: EeaRoleManagerCaller{contract: contract}, EeaRoleManagerTransactor: EeaRoleManagerTransactor{contract: contract}, EeaRoleManagerFilterer: EeaRoleManagerFilterer{contract: contract}}, nil
}

// EeaRoleManager is an auto generated Go binding around an Ethereum contract.
type EeaRoleManager struct {
	EeaRoleManagerCaller     // Read-only binding to the contract
	EeaRoleManagerTransactor // Write-only binding to the contract
	EeaRoleManagerFilterer   // Log filterer for contract events
}

// EeaRoleManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type EeaRoleManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// EeaRoleManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type EeaRoleManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// EeaRoleManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type EeaRoleManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// EeaRoleManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type EeaRoleManagerSession struct {
	Contract     *EeaRoleManager   // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// EeaRoleManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type EeaRoleManagerCallerSession struct {
	Contract *EeaRoleManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts         // Call options to use throughout this session
}

// EeaRoleManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type EeaRoleManagerTransactorSession struct {
	Contract     *EeaRoleManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts         // Transaction auth options to use throughout this session
}

// EeaRoleManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type EeaRoleManagerRaw struct {
	Contract *EeaRoleManager // Generic contract binding to access the raw methods on
}

// EeaRoleManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type EeaRoleManagerCallerRaw struct {
	Contract *EeaRoleManagerCaller // Generic read-only contract binding to access the raw methods on
}

// EeaRoleManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type EeaRoleManagerTransactorRaw struct {
	Contract *EeaRoleManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewEeaRoleManager creates a new instance of EeaRoleManager, bound to a specific deployed contract.
func NewEeaRoleManager(address common.Address, backend bind.ContractBackend) (*EeaRoleManager, error) {
	contract, err := bindEeaRoleManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &EeaRoleManager{EeaRoleManagerCaller: EeaRoleManagerCaller{contract: contract}, EeaRoleManagerTransactor: EeaRoleManagerTransactor{contract: contract}, EeaRoleManagerFilterer: EeaRoleManagerFilterer{contract: contract}}, nil
}

// NewEeaRoleManagerCaller creates a new read-only instance of EeaRoleManager, bound to a specific deployed contract.
func NewEeaRoleManagerCaller(address common.Address, caller bind.ContractCaller) (*EeaRoleManagerCaller, error) {
	contract, err := bindEeaRoleManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &EeaRoleManagerCaller{contract: contract}, nil
}

// NewEeaRoleManagerTransactor creates a new write-only instance of EeaRoleManager, bound to a specific deployed contract.
func NewEeaRoleManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*EeaRoleManagerTransactor, error) {
	contract, err := bindEeaRoleManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &EeaRoleManagerTransactor{contract: contract}, nil
}

// NewEeaRoleManagerFilterer creates a new log filterer instance of EeaRoleManager, bound to a specific deployed contract.
func NewEeaRoleManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*EeaRoleManagerFilterer, error) {
	contract, err := bindEeaRoleManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &EeaRoleManagerFilterer{contract: contract}, nil
}

// bindEeaRoleManager binds a generic wrapper to an already deployed contract.
func bindEeaRoleManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(EeaRoleManagerABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_EeaRoleManager *EeaRoleManagerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _EeaRoleManager.Contract.EeaRoleManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_EeaRoleManager *EeaRoleManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _EeaRoleManager.Contract.EeaRoleManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_EeaRoleManager *EeaRoleManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _EeaRoleManager.Contract.EeaRoleManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_EeaRoleManager *EeaRoleManagerCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _EeaRoleManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_EeaRoleManager *EeaRoleManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _EeaRoleManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_EeaRoleManager *EeaRoleManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _EeaRoleManager.Contract.contract.Transact(opts, method, params...)
}

// GetNumberOfRoles is a free data retrieval call binding the contract method 0x87f55d31.
//
// Solidity: function getNumberOfRoles() constant returns(uint256)
func (_EeaRoleManager *EeaRoleManagerCaller) GetNumberOfRoles(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _EeaRoleManager.contract.Call(opts, out, "getNumberOfRoles")
	return *ret0, err
}

// GetNumberOfRoles is a free data retrieval call binding the contract method 0x87f55d31.
//
// Solidity: function getNumberOfRoles() constant returns(uint256)
func (_EeaRoleManager *EeaRoleManagerSession) GetNumberOfRoles() (*big.Int, error) {
	return _EeaRoleManager.Contract.GetNumberOfRoles(&_EeaRoleManager.CallOpts)
}

// GetNumberOfRoles is a free data retrieval call binding the contract method 0x87f55d31.
//
// Solidity: function getNumberOfRoles() constant returns(uint256)
func (_EeaRoleManager *EeaRoleManagerCallerSession) GetNumberOfRoles() (*big.Int, error) {
	return _EeaRoleManager.Contract.GetNumberOfRoles(&_EeaRoleManager.CallOpts)
}

// GetRoleDetails is a free data retrieval call binding the contract method 0x1870aba3.
//
// Solidity: function getRoleDetails(string _roleId, string _orgId) constant returns(string roleId, string orgId, uint256 accessType, bool voter, bool admin, bool active)
func (_EeaRoleManager *EeaRoleManagerCaller) GetRoleDetails(opts *bind.CallOpts, _roleId string, _orgId string) (struct {
	RoleId     string
	OrgId      string
	AccessType *big.Int
	Voter      bool
	Admin      bool
	Active     bool
}, error) {
	ret := new(struct {
		RoleId     string
		OrgId      string
		AccessType *big.Int
		Voter      bool
		Admin      bool
		Active     bool
	})
	out := ret
	err := _EeaRoleManager.contract.Call(opts, out, "getRoleDetails", _roleId, _orgId)
	return *ret, err
}

// GetRoleDetails is a free data retrieval call binding the contract method 0x1870aba3.
//
// Solidity: function getRoleDetails(string _roleId, string _orgId) constant returns(string roleId, string orgId, uint256 accessType, bool voter, bool admin, bool active)
func (_EeaRoleManager *EeaRoleManagerSession) GetRoleDetails(_roleId string, _orgId string) (struct {
	RoleId     string
	OrgId      string
	AccessType *big.Int
	Voter      bool
	Admin      bool
	Active     bool
}, error) {
	return _EeaRoleManager.Contract.GetRoleDetails(&_EeaRoleManager.CallOpts, _roleId, _orgId)
}

// GetRoleDetails is a free data retrieval call binding the contract method 0x1870aba3.
//
// Solidity: function getRoleDetails(string _roleId, string _orgId) constant returns(string roleId, string orgId, uint256 accessType, bool voter, bool admin, bool active)
func (_EeaRoleManager *EeaRoleManagerCallerSession) GetRoleDetails(_roleId string, _orgId string) (struct {
	RoleId     string
	OrgId      string
	AccessType *big.Int
	Voter      bool
	Admin      bool
	Active     bool
}, error) {
	return _EeaRoleManager.Contract.GetRoleDetails(&_EeaRoleManager.CallOpts, _roleId, _orgId)
}

// GetRoleDetailsFromIndex is a free data retrieval call binding the contract method 0xa451d4a8.
//
// Solidity: function getRoleDetailsFromIndex(uint256 _rIndex) constant returns(string roleId, string orgId, uint256 accessType, bool voter, bool admin, bool active)
func (_EeaRoleManager *EeaRoleManagerCaller) GetRoleDetailsFromIndex(opts *bind.CallOpts, _rIndex *big.Int) (struct {
	RoleId     string
	OrgId      string
	AccessType *big.Int
	Voter      bool
	Admin      bool
	Active     bool
}, error) {
	ret := new(struct {
		RoleId     string
		OrgId      string
		AccessType *big.Int
		Voter      bool
		Admin      bool
		Active     bool
	})
	out := ret
	err := _EeaRoleManager.contract.Call(opts, out, "getRoleDetailsFromIndex", _rIndex)
	return *ret, err
}

// GetRoleDetailsFromIndex is a free data retrieval call binding the contract method 0xa451d4a8.
//
// Solidity: function getRoleDetailsFromIndex(uint256 _rIndex) constant returns(string roleId, string orgId, uint256 accessType, bool voter, bool admin, bool active)
func (_EeaRoleManager *EeaRoleManagerSession) GetRoleDetailsFromIndex(_rIndex *big.Int) (struct {
	RoleId     string
	OrgId      string
	AccessType *big.Int
	Voter      bool
	Admin      bool
	Active     bool
}, error) {
	return _EeaRoleManager.Contract.GetRoleDetailsFromIndex(&_EeaRoleManager.CallOpts, _rIndex)
}

// GetRoleDetailsFromIndex is a free data retrieval call binding the contract method 0xa451d4a8.
//
// Solidity: function getRoleDetailsFromIndex(uint256 _rIndex) constant returns(string roleId, string orgId, uint256 accessType, bool voter, bool admin, bool active)
func (_EeaRoleManager *EeaRoleManagerCallerSession) GetRoleDetailsFromIndex(_rIndex *big.Int) (struct {
	RoleId     string
	OrgId      string
	AccessType *big.Int
	Voter      bool
	Admin      bool
	Active     bool
}, error) {
	return _EeaRoleManager.Contract.GetRoleDetailsFromIndex(&_EeaRoleManager.CallOpts, _rIndex)
}

// IsAdminRole is a free data retrieval call binding the contract method 0xbe322e54.
//
// Solidity: function isAdminRole(string _roleId, string _orgId, string _ultParent) constant returns(bool)
func (_EeaRoleManager *EeaRoleManagerCaller) IsAdminRole(opts *bind.CallOpts, _roleId string, _orgId string, _ultParent string) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _EeaRoleManager.contract.Call(opts, out, "isAdminRole", _roleId, _orgId, _ultParent)
	return *ret0, err
}

// IsAdminRole is a free data retrieval call binding the contract method 0xbe322e54.
//
// Solidity: function isAdminRole(string _roleId, string _orgId, string _ultParent) constant returns(bool)
func (_EeaRoleManager *EeaRoleManagerSession) IsAdminRole(_roleId string, _orgId string, _ultParent string) (bool, error) {
	return _EeaRoleManager.Contract.IsAdminRole(&_EeaRoleManager.CallOpts, _roleId, _orgId, _ultParent)
}

// IsAdminRole is a free data retrieval call binding the contract method 0xbe322e54.
//
// Solidity: function isAdminRole(string _roleId, string _orgId, string _ultParent) constant returns(bool)
func (_EeaRoleManager *EeaRoleManagerCallerSession) IsAdminRole(_roleId string, _orgId string, _ultParent string) (bool, error) {
	return _EeaRoleManager.Contract.IsAdminRole(&_EeaRoleManager.CallOpts, _roleId, _orgId, _ultParent)
}

// IsVoterRole is a free data retrieval call binding the contract method 0xdeb16ba7.
//
// Solidity: function isVoterRole(string _roleId, string _orgId, string _ultParent) constant returns(bool)
func (_EeaRoleManager *EeaRoleManagerCaller) IsVoterRole(opts *bind.CallOpts, _roleId string, _orgId string, _ultParent string) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _EeaRoleManager.contract.Call(opts, out, "isVoterRole", _roleId, _orgId, _ultParent)
	return *ret0, err
}

// IsVoterRole is a free data retrieval call binding the contract method 0xdeb16ba7.
//
// Solidity: function isVoterRole(string _roleId, string _orgId, string _ultParent) constant returns(bool)
func (_EeaRoleManager *EeaRoleManagerSession) IsVoterRole(_roleId string, _orgId string, _ultParent string) (bool, error) {
	return _EeaRoleManager.Contract.IsVoterRole(&_EeaRoleManager.CallOpts, _roleId, _orgId, _ultParent)
}

// IsVoterRole is a free data retrieval call binding the contract method 0xdeb16ba7.
//
// Solidity: function isVoterRole(string _roleId, string _orgId, string _ultParent) constant returns(bool)
func (_EeaRoleManager *EeaRoleManagerCallerSession) IsVoterRole(_roleId string, _orgId string, _ultParent string) (bool, error) {
	return _EeaRoleManager.Contract.IsVoterRole(&_EeaRoleManager.CallOpts, _roleId, _orgId, _ultParent)
}

// RoleAccess is a free data retrieval call binding the contract method 0xcfc83dfa.
//
// Solidity: function roleAccess(string _roleId, string _orgId, string _ultParent) constant returns(uint256)
func (_EeaRoleManager *EeaRoleManagerCaller) RoleAccess(opts *bind.CallOpts, _roleId string, _orgId string, _ultParent string) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _EeaRoleManager.contract.Call(opts, out, "roleAccess", _roleId, _orgId, _ultParent)
	return *ret0, err
}

// RoleAccess is a free data retrieval call binding the contract method 0xcfc83dfa.
//
// Solidity: function roleAccess(string _roleId, string _orgId, string _ultParent) constant returns(uint256)
func (_EeaRoleManager *EeaRoleManagerSession) RoleAccess(_roleId string, _orgId string, _ultParent string) (*big.Int, error) {
	return _EeaRoleManager.Contract.RoleAccess(&_EeaRoleManager.CallOpts, _roleId, _orgId, _ultParent)
}

// RoleAccess is a free data retrieval call binding the contract method 0xcfc83dfa.
//
// Solidity: function roleAccess(string _roleId, string _orgId, string _ultParent) constant returns(uint256)
func (_EeaRoleManager *EeaRoleManagerCallerSession) RoleAccess(_roleId string, _orgId string, _ultParent string) (*big.Int, error) {
	return _EeaRoleManager.Contract.RoleAccess(&_EeaRoleManager.CallOpts, _roleId, _orgId, _ultParent)
}

// RoleExists is a free data retrieval call binding the contract method 0xabf5739f.
//
// Solidity: function roleExists(string _roleId, string _orgId, string _ultParent) constant returns(bool)
func (_EeaRoleManager *EeaRoleManagerCaller) RoleExists(opts *bind.CallOpts, _roleId string, _orgId string, _ultParent string) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _EeaRoleManager.contract.Call(opts, out, "roleExists", _roleId, _orgId, _ultParent)
	return *ret0, err
}

// RoleExists is a free data retrieval call binding the contract method 0xabf5739f.
//
// Solidity: function roleExists(string _roleId, string _orgId, string _ultParent) constant returns(bool)
func (_EeaRoleManager *EeaRoleManagerSession) RoleExists(_roleId string, _orgId string, _ultParent string) (bool, error) {
	return _EeaRoleManager.Contract.RoleExists(&_EeaRoleManager.CallOpts, _roleId, _orgId, _ultParent)
}

// RoleExists is a free data retrieval call binding the contract method 0xabf5739f.
//
// Solidity: function roleExists(string _roleId, string _orgId, string _ultParent) constant returns(bool)
func (_EeaRoleManager *EeaRoleManagerCallerSession) RoleExists(_roleId string, _orgId string, _ultParent string) (bool, error) {
	return _EeaRoleManager.Contract.RoleExists(&_EeaRoleManager.CallOpts, _roleId, _orgId, _ultParent)
}

// AddRole is a paid mutator transaction binding the contract method 0x7b713579.
//
// Solidity: function addRole(string _roleId, string _orgId, uint256 _baseAccess, bool _isVoter, bool _isAdmin) returns()
func (_EeaRoleManager *EeaRoleManagerTransactor) AddRole(opts *bind.TransactOpts, _roleId string, _orgId string, _baseAccess *big.Int, _isVoter bool, _isAdmin bool) (*types.Transaction, error) {
	return _EeaRoleManager.contract.Transact(opts, "addRole", _roleId, _orgId, _baseAccess, _isVoter, _isAdmin)
}

// AddRole is a paid mutator transaction binding the contract method 0x7b713579.
//
// Solidity: function addRole(string _roleId, string _orgId, uint256 _baseAccess, bool _isVoter, bool _isAdmin) returns()
func (_EeaRoleManager *EeaRoleManagerSession) AddRole(_roleId string, _orgId string, _baseAccess *big.Int, _isVoter bool, _isAdmin bool) (*types.Transaction, error) {
	return _EeaRoleManager.Contract.AddRole(&_EeaRoleManager.TransactOpts, _roleId, _orgId, _baseAccess, _isVoter, _isAdmin)
}

// AddRole is a paid mutator transaction binding the contract method 0x7b713579.
//
// Solidity: function addRole(string _roleId, string _orgId, uint256 _baseAccess, bool _isVoter, bool _isAdmin) returns()
func (_EeaRoleManager *EeaRoleManagerTransactorSession) AddRole(_roleId string, _orgId string, _baseAccess *big.Int, _isVoter bool, _isAdmin bool) (*types.Transaction, error) {
	return _EeaRoleManager.Contract.AddRole(&_EeaRoleManager.TransactOpts, _roleId, _orgId, _baseAccess, _isVoter, _isAdmin)
}

// RemoveRole is a paid mutator transaction binding the contract method 0xa6343012.
//
// Solidity: function removeRole(string _roleId, string _orgId) returns()
func (_EeaRoleManager *EeaRoleManagerTransactor) RemoveRole(opts *bind.TransactOpts, _roleId string, _orgId string) (*types.Transaction, error) {
	return _EeaRoleManager.contract.Transact(opts, "removeRole", _roleId, _orgId)
}

// RemoveRole is a paid mutator transaction binding the contract method 0xa6343012.
//
// Solidity: function removeRole(string _roleId, string _orgId) returns()
func (_EeaRoleManager *EeaRoleManagerSession) RemoveRole(_roleId string, _orgId string) (*types.Transaction, error) {
	return _EeaRoleManager.Contract.RemoveRole(&_EeaRoleManager.TransactOpts, _roleId, _orgId)
}

// RemoveRole is a paid mutator transaction binding the contract method 0xa6343012.
//
// Solidity: function removeRole(string _roleId, string _orgId) returns()
func (_EeaRoleManager *EeaRoleManagerTransactorSession) RemoveRole(_roleId string, _orgId string) (*types.Transaction, error) {
	return _EeaRoleManager.Contract.RemoveRole(&_EeaRoleManager.TransactOpts, _roleId, _orgId)
}

// EeaRoleManagerRoleCreatedIterator is returned from FilterRoleCreated and is used to iterate over the raw logs and unpacked data for RoleCreated events raised by the EeaRoleManager contract.
type EeaRoleManagerRoleCreatedIterator struct {
	Event *EeaRoleManagerRoleCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *EeaRoleManagerRoleCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(EeaRoleManagerRoleCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(EeaRoleManagerRoleCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *EeaRoleManagerRoleCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *EeaRoleManagerRoleCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// EeaRoleManagerRoleCreated represents a RoleCreated event raised by the EeaRoleManager contract.
type EeaRoleManagerRoleCreated struct {
	RoleId     string
	OrgId      string
	BaseAccess *big.Int
	IsVoter    bool
	IsAdmin    bool
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterRoleCreated is a free log retrieval operation binding the contract event 0xefa5bc1bedbee25b04b00855c15a0c180ecb4a2440d4d08296e49561655e2b1c.
//
// Solidity: event RoleCreated(string _roleId, string _orgId, uint256 _baseAccess, bool _isVoter, bool _isAdmin)
func (_EeaRoleManager *EeaRoleManagerFilterer) FilterRoleCreated(opts *bind.FilterOpts) (*EeaRoleManagerRoleCreatedIterator, error) {

	logs, sub, err := _EeaRoleManager.contract.FilterLogs(opts, "RoleCreated")
	if err != nil {
		return nil, err
	}
	return &EeaRoleManagerRoleCreatedIterator{contract: _EeaRoleManager.contract, event: "RoleCreated", logs: logs, sub: sub}, nil
}

// WatchRoleCreated is a free log subscription operation binding the contract event 0xefa5bc1bedbee25b04b00855c15a0c180ecb4a2440d4d08296e49561655e2b1c.
//
// Solidity: event RoleCreated(string _roleId, string _orgId, uint256 _baseAccess, bool _isVoter, bool _isAdmin)
func (_EeaRoleManager *EeaRoleManagerFilterer) WatchRoleCreated(opts *bind.WatchOpts, sink chan<- *EeaRoleManagerRoleCreated) (event.Subscription, error) {

	logs, sub, err := _EeaRoleManager.contract.WatchLogs(opts, "RoleCreated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(EeaRoleManagerRoleCreated)
				if err := _EeaRoleManager.contract.UnpackLog(event, "RoleCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleCreated is a log parse operation binding the contract event 0xefa5bc1bedbee25b04b00855c15a0c180ecb4a2440d4d08296e49561655e2b1c.
//
// Solidity: event RoleCreated(string _roleId, string _orgId, uint256 _baseAccess, bool _isVoter, bool _isAdmin)
func (_EeaRoleManager *EeaRoleManagerFilterer) ParseRoleCreated(log types.Log) (*EeaRoleManagerRoleCreated, error) {
	event := new(EeaRoleManagerRoleCreated)
	if err := _EeaRoleManager.contract.UnpackLog(event, "RoleCreated", log); err != nil {
		return nil, err
	}
	return event, nil
}

// EeaRoleManagerRoleRevokedIterator is returned from FilterRoleRevoked and is used to iterate over the raw logs and unpacked data for RoleRevoked events raised by the EeaRoleManager contract.
type EeaRoleManagerRoleRevokedIterator struct {
	Event *EeaRoleManagerRoleRevoked // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *EeaRoleManagerRoleRevokedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(EeaRoleManagerRoleRevoked)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(EeaRoleManagerRoleRevoked)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *EeaRoleManagerRoleRevokedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *EeaRoleManagerRoleRevokedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// EeaRoleManagerRoleRevoked represents a RoleRevoked event raised by the EeaRoleManager contract.
type EeaRoleManagerRoleRevoked struct {
	RoleId string
	OrgId  string
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterRoleRevoked is a free log retrieval operation binding the contract event 0x1196059dd83524bf989fd94bb65808c09dbea2ab791fb6bfa87a0e0aa64b2ea6.
//
// Solidity: event RoleRevoked(string _roleId, string _orgId)
func (_EeaRoleManager *EeaRoleManagerFilterer) FilterRoleRevoked(opts *bind.FilterOpts) (*EeaRoleManagerRoleRevokedIterator, error) {

	logs, sub, err := _EeaRoleManager.contract.FilterLogs(opts, "RoleRevoked")
	if err != nil {
		return nil, err
	}
	return &EeaRoleManagerRoleRevokedIterator{contract: _EeaRoleManager.contract, event: "RoleRevoked", logs: logs, sub: sub}, nil
}

// WatchRoleRevoked is a free log subscription operation binding the contract event 0x1196059dd83524bf989fd94bb65808c09dbea2ab791fb6bfa87a0e0aa64b2ea6.
//
// Solidity: event RoleRevoked(string _roleId, string _orgId)
func (_EeaRoleManager *EeaRoleManagerFilterer) WatchRoleRevoked(opts *bind.WatchOpts, sink chan<- *EeaRoleManagerRoleRevoked) (event.Subscription, error) {

	logs, sub, err := _EeaRoleManager.contract.WatchLogs(opts, "RoleRevoked")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(EeaRoleManagerRoleRevoked)
				if err := _EeaRoleManager.contract.UnpackLog(event, "RoleRevoked", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleRevoked is a log parse operation binding the contract event 0x1196059dd83524bf989fd94bb65808c09dbea2ab791fb6bfa87a0e0aa64b2ea6.
//
// Solidity: event RoleRevoked(string _roleId, string _orgId)
func (_EeaRoleManager *EeaRoleManagerFilterer) ParseRoleRevoked(log types.Log) (*EeaRoleManagerRoleRevoked, error) {
	event := new(EeaRoleManagerRoleRevoked)
	if err := _EeaRoleManager.contract.UnpackLog(event, "RoleRevoked", log); err != nil {
		return nil, err
	}
	return event, nil
}
